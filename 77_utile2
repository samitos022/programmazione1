
// Add hereafter the definition of estrai
void estrai_aux(const tree * root, int*& l1, int*& l2, int& indice1, int& indice2) {
  if (NULL != root) {
    estrai_aux(root->right, l1, l2, indice1, indice2);
    if ((root->info % 2) == 0) {
      l1[indice1] = root->info;
      indice1++;
    } else {
      l2[indice2] = root->info;
      indice2++;
    }
    estrai_aux(root->left, l1, l2, indice1, indice2);
  }
}

void conta_dimensione_array(const tree * root, int& contatore1, int& contatore2) {
  if (NULL != root) {
    conta_dimensione_array(root->right, contatore1, contatore2);
    if ((root->info % 2) == 0) {
      contatore1++;
    } else {
      contatore2++;
    }
    conta_dimensione_array(root->left, contatore1, contatore2);
  }
}

void estrai(const tree * root, int*& l1, int*& l2) {
  int dimensione1 = 0;
  int dimensione2 = 0;

  conta_dimensione_array(root, dimensione1, dimensione2);

  l1 = new int[dimensione1];
  l2 = new int[dimensione2];

  int indice1 = 0;
  int indice2 = 0;
  estrai_aux(root, l1, l2, indice1, indice2);

}
// Add here above the definition of estrai
